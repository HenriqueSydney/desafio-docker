name: CI

on: 
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: 'Build and Push'
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node: [ 16, 18, 20 ]

    steps:
      - uses: actions/checkout@v4
      # - name: Setup node | ${{ matrix.node }}
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          # node-version: ${{ matrix.node }}
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm run test

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Generate tag
        id: generate_tag
        run: | 
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::585445949187:role/ecr_role
          aws-region: us-east-2

      - name: Login into AWS Container Register (ECR)
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2


      - name: Build docker image
        id: build-docker-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry}}
          TAG: ${{ steps.generate_tag.outputs.sha }}
        run: |
          docker build -t $REGISTRY/henrique-lima-ci:$TAG .
          docker push $REGISTRY/henrique-lima-ci:$TAG
          docker tag $REGISTRY/henrique-lima-ci:$TAG $REGISTRY/henrique-lima-ci:latest
          IMAGE=$(echo $REGISTRY/henrique-lima-ci:$TAG)
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
      
      - name: Deploy to App Runner
        id: deploy-app-runner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: henriquelima-api
          image: ${{ steps.build-docker-image.outputs.image }}
          access-role-arn: arn:aws:iam::585445949187:role/app-runner-role
          region: us-east-2
          cpu: 1
          memory: 2
          port: 3000
          wait-for-service-stability-seconds: 180

      - name: App Runner check
        run: echo "App Runner running... ${{ steps.deploy-app-runner.outputs.service-url }}"

      